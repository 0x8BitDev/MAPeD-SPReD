;#######################################################
;
; Generated by MAPeD(NES) Copyright 2017-2019 0x8BitDev
;
;#######################################################

; export options:
;	- tiles 4x4 (RLE)/(columns)
;	- attributes per CHR (MMC5)
;	- properties per block
;	- mode: static screens
;	- layout: adjacent screens (marks)
;	- entities (screen coordinates)


MAP_DATA_MAGIC = $34B8E

; data flags:
MAP_FLAG_TILES2X2                 = $01
MAP_FLAG_TILES4X4                 = $02
MAP_FLAG_RLE                      = $04
MAP_FLAG_DIR_COLUMNS              = $08
MAP_FLAG_DIR_ROWS                 = $10
MAP_FLAG_MODE_MULTIDIR_SCROLL     = $20
MAP_FLAG_MODE_BIDIR_SCROLL        = $40
MAP_FLAG_MODE_STATIC_SCREENS      = $80
MAP_FLAG_ENTITIES                 = $100
MAP_FLAG_ENTITY_SCREEN_COORDS     = $200
MAP_FLAG_ENTITY_MAP_COORS         = $400
MAP_FLAG_LAYOUT_ADJACENT_SCREENS  = $800
MAP_FLAG_LAYOUT_ADJACENT_SCR_INDS = $1000
MAP_FLAG_LAYOUT_MATRIX            = $2000
MAP_FLAG_MARKS                    = $4000
MAP_FLAG_ATTRS_PER_BLOCK          = $8000
MAP_FLAG_ATTRS_PER_CHR            = $10000
MAP_FLAG_PROP_ID_PER_BLOCK        = $20000
MAP_FLAG_PROP_ID_PER_CHR          = $40000

; *** BASE ENTITIES ***

; *** GLOBAL DATA ***

; chr0:	.incbin "tilemap_chr0.bin"		; (1216)
; chr1:	.incbin "tilemap_chr1.bin"		; (944)
; chr2:	.incbin "tilemap_chr2.bin"		; (1024)

tilemap_Props:	.incbin "tilemap_Props.bin"	; (82) block properties array of all exported data banks ( 1 byte per block; data offset = props offset / 4 )

tilemap_PropsOffs:
	.word 0	; (chr0)
	.word 132	; (chr1)
	.word 212	; (chr2)

tilemap_Tiles:	.incbin "tilemap_Tiles.bin"	; (792) tiles (4x4) array of all exported data banks ( 4 bytes per tile )

tilemap_TilesOffs:
	.word 0	; (chr0)
	.word 252	; (chr1)
	.word 484	; (chr2)

tilemap_PPUScr:	.incbin "tilemap_PPUScr.bin"	; compressed (5196 / 5760) PPU-ready data array for each screen ( 960 bytes per screen )
tilemap_AttrsScr:	.incbin "tilemap_AttrsScr.bin"	; compressed (1704 / 5760) MMC5-ready attributes array for each screen ( 960 bytes per screen )
tilemap_TilesScr:	.incbin "tilemap_TilesScr.bin"	; (384) tiles (4x4) array for each screen ( 64 bytes per screen \ 1 byte per tile )
tilemap_Plts:	.incbin "tilemap_Plts.bin"	; (48) palettes array of all exported data banks ( data offset = chr_id * 16 )

; *** Lev0 ***

Lev0_StartScr:	.word Lev0Scr4

Lev0Scr1:
	.byte 2	; chr_id
	.byte $C0	; (marks) bits: 7-4 - bit mask of user defined adjacent screens ( Down(7)-Right(6)-Up(5)-Left(4) ); 3-0 - screen property

	.word 1759	; tilemap_PPUScr offset
	.word 519	; tilemap_AttrsScr offset

	.byte 4	; screen index

	.word 0	; left adjacent screen
	.word 0	; up adjacent screen
	.word Lev0Scr2	; right adjacent screen
	.word Lev0Scr5	; down adjacent screen

Lev0Scr1EntsArr:
	.byte 0

Lev0Scr2:
	.byte 0
	.byte $90

	.word 863
	.word 273

	.byte 1

	.word Lev0Scr1
	.word 0
	.word 0
	.word Lev0Scr6

Lev0Scr2EntsArr:
	.byte 0

Lev0Scr4:
	.byte 0
	.byte $40

	.word 0
	.word 0

	.byte 0

	.word 0
	.word 0
	.word Lev0Scr5
	.word 0

Lev0Scr4EntsArr:
	.byte 0

Lev0Scr5:
	.byte 1
	.byte $30

	.word 4311
	.word 1361

	.byte 3

	.word Lev0Scr4
	.word Lev0Scr1
	.word Lev0Scr6
	.word 0

Lev0Scr5EntsArr:
	.byte 0

Lev0Scr6:
	.byte 1
	.byte $60

	.word 3472
	.word 1039

	.byte 2

	.word Lev0Scr5
	.word Lev0Scr2
	.word Lev0Scr7
	.word 0

Lev0Scr6EntsArr:
	.byte 0

Lev0Scr7:
	.byte 2
	.byte $10

	.word 2621
	.word 785

	.byte 5

	.word Lev0Scr6
	.word 0
	.word 0
	.word 0

Lev0Scr7EntsArr:
	.byte 0

