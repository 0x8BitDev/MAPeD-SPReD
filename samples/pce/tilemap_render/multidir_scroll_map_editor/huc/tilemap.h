//############################################################
//
// Generated by MAPeD-PCE (x64) Copyright 2017-2023 0x8BitDev
//
//############################################################


#incasm( "tilemap.asm" )

// export options:
//	- tiles 4x4/(columns)
//	- properties per block
//	- mode: multidirectional scrolling
//	- layout: matrix (no marks)
//	- no entities


/* exported data flags: */

#define FLAG_TILES2X2                 0
#define FLAG_TILES4X4                 1
#define FLAG_RLE                      0
#define FLAG_DIR_COLUMNS              1
#define FLAG_DIR_ROWS                 0
#define FLAG_MODE_MULTIDIR_SCROLL     1
#define FLAG_MODE_BIDIR_SCROLL        0
#define FLAG_MODE_BIDIR_STAT_SCR      0
#define FLAG_MODE_STAT_SCR            0
#define FLAG_ENTITIES                 0
#define FLAG_ENTITY_SCR_COORDS        0
#define FLAG_ENTITY_MAP_COORS         0
#define FLAG_ENTITY_SORTING_OFF       0
#define FLAG_ENTITY_SORTING_LT_RT     0
#define FLAG_ENTITY_SORTING_BTM_TP    0
#define FLAG_LAYOUT_ADJ_SCR           0
#define FLAG_LAYOUT_ADJ_SCR_INDS      0
#define FLAG_LAYOUT_MATRIX            1
#define FLAG_MARKS                    0
#define FLAG_PROP_ID_PER_BLOCK        1
#define FLAG_PROP_ID_PER_CHR          0

#define MAPS_CNT	1

#define BAT_INDEX	1
#define CHRS_OFFSET	64	// first CHR index from the beginning of VRAM

#define SCR_BLOCKS2x2_WIDTH	16	// number of screen blocks (2x2) in width
#define SCR_BLOCKS2x2_HEIGHT	14	// number of screen blocks (2x2) in height

#define ScrTilesWidth	8	// number of screen tiles (4x4) in width
#define ScrTilesHeight	7	// number of screen tiles (4x4) in height

#define ScrPixelsWidth	256	// screen width in pixels
#define ScrPixelsHeight	224	// screen height in pixels

/* screen data */

typedef struct
{
#if	FLAG_MODE_BIDIR_SCROLL + FLAG_MODE_STAT_SCR
	u8	chr_id;
#endif
#if	FLAG_MARKS
	//bits: 7-4 - bit mask of user defined adjacent screens ( Down(7)-Right(6)-Up(5)-Left(4) ); 3-0 - screen property
	u8	marks;
#endif
#if	FLAG_MODE_STAT_SCR
	u16	VDC_data_offset;
#endif
#if	FLAG_MODE_BIDIR_SCROLL + FLAG_MODE_STAT_SCR
	u8	scr_ind;
#endif
#if	FLAG_LAYOUT_ADJ_SCR
	// adjacent screen pointers
	u16	adj_scr[4];
#endif
#if	FLAG_LAYOUT_ADJ_SCR_INDS
	u8	adj_scr[4];
#endif
#if	FLAG_ENTITIES
	u8	ents_cnt;
#endif
} mpd_SCREEN;

extern u16*	chr0;

// *** GLOBAL DATA ***

#define	ENT_MAX_PROPS_CNT	0

extern u16	mpd_CHRs[];
extern u16*	mpd_CHRs_size;
extern u8*	mpd_Tiles;
extern u16*	mpd_TilesOffs;
extern u16*	mpd_Attrs;
extern u16*	mpd_BlocksOffs;
extern u8*	mpd_Props;
extern u16*	mpd_PropsOffs;
extern u8*	mpd_MapsArr;
extern u16*	mpd_MapsTbl;
extern u16*	mpd_MapsTblOffs;
extern u16*	mpd_Plts;
extern u8*	mpd_MapsCHRBanks;
extern u8*	mpd_StartScrArr[];
extern u8*	mpd_LayoutsDimArr[];
extern mpd_SCREEN** mpd_LayoutsArr[];

#define	MAX_MAP_SIZE		336	// tilemap size in bytes of a largest map
#define	MAX_MAP_TBL_SIZE	48	// tilemap LUT in bytes of a largest map
#define	MAX_TILE_PROPS_SIZE	80	// largest array of tile properties
